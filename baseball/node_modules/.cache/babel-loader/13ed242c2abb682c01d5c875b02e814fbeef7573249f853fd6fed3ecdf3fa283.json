{"ast":null,"code":"var _jsxFileName = \"C:\\\\FinalProject\\\\baseball\\\\src\\\\Component\\\\SelectField.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { ws } from './WebServer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadButton({\n  uploadHandler\n}) {\n  _s();\n  const CHUNK_SIZE = 1024 * 1024;\n  const [selectedFiles, setSelectedFiles] = useState(null);\n  ws.onmessage = e => {\n    let msg = JSON.parse(e.data);\n    uploadHandler(msg['videoPath']);\n    alert(msg['detail']);\n  };\n  const handleFileChange = event => {\n    setSelectedFiles(event.target.files);\n  };\n  const handleUpload = () => {\n    if (ws && selectedFiles) {\n      for (let i = 0; i < selectedFiles.length; i++) {\n        const file = selectedFiles[i];\n        const totalChunks = Math.ceil(file.size / CHUNK_SIZE);\n        let currentChunk = 0;\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          const fileBuffer = e.target.result;\n          try {\n            ws.send(JSON.stringify({\n              flag: \"Upload\",\n              filename: file.name,\n              chunk: currentChunk,\n              totalChunks: totalChunks,\n              filebuffer: btoa(new Uint8Array(fileBuffer).reduce((data, byte) => data + String.fromCharCode(byte), ''))\n            }));\n          } catch (e) {\n            console.error(e);\n          }\n          currentChunk++;\n          if (currentChunk < totalChunks) {\n            sendNextChunk(); // 傳送下一個塊\n          } else {\n            console.log(`${file.name} 上傳完成`);\n          }\n        };\n        function sendNextChunk() {\n          const start = currentChunk * CHUNK_SIZE;\n          const end = Math.min(start + CHUNK_SIZE, file.size);\n          const chunk = file.slice(start, end);\n          reader.readAsArrayBuffer(chunk); // 讀取每個塊為 ArrayBuffer\n        }\n        sendNextChunk(); // 開始傳送第一個塊\n      }\n    } else {\n      alert(\"沒有選擇檔案\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '80%',\n      margin: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        for: \"formFileMultiple\",\n        className: \"form-label\",\n        children: \"\\u9078\\u64C7\\u5F71\\u7247\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        type: \"file\",\n        id: \"formFileMultiple\",\n        multiple: true,\n        onChange: e => handleFileChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          margin: '30px',\n          color: 'white',\n          backgroundColor: 'rgba(73,107,191,1.0)'\n        },\n        type: \"button\",\n        className: \"btn btn-light\",\n        onClick: () => handleUpload(),\n        children: \"\\u4E0A\\u50B3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_s(UploadButton, \"S5gKaKaQSjpBq52dz/0MTF9xx90=\");\n_c = UploadButton;\nvar _c;\n$RefreshReg$(_c, \"UploadButton\");","map":{"version":3,"names":["React","useState","ws","jsxDEV","_jsxDEV","UploadButton","uploadHandler","_s","CHUNK_SIZE","selectedFiles","setSelectedFiles","onmessage","e","msg","JSON","parse","data","alert","handleFileChange","event","target","files","handleUpload","i","length","file","totalChunks","Math","ceil","size","currentChunk","reader","FileReader","onload","fileBuffer","result","send","stringify","flag","filename","name","chunk","filebuffer","btoa","Uint8Array","reduce","byte","String","fromCharCode","console","error","sendNextChunk","log","start","end","min","slice","readAsArrayBuffer","style","width","margin","children","className","for","fileName","_jsxFileName","lineNumber","columnNumber","type","id","multiple","onChange","color","backgroundColor","onClick","_c","$RefreshReg$"],"sources":["C:/FinalProject/baseball/src/Component/SelectField.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { ws } from './WebServer'\n\nexport default function UploadButton({uploadHandler }) {\n\n    const CHUNK_SIZE = 1024 * 1024;\n    const [selectedFiles, setSelectedFiles] = useState(null);\n    ws.onmessage = (e) => {\n        let msg = JSON.parse(e.data)\n        uploadHandler(msg['videoPath'])\n        alert(msg['detail'])\n\n    }\n\n\n    const handleFileChange = (event) => {\n        setSelectedFiles(event.target.files);\n    };\n\n    const handleUpload = () => {\n        if (ws && selectedFiles) {\n            for (let i = 0; i < selectedFiles.length; i++) {\n                const file = selectedFiles[i];\n                const totalChunks = Math.ceil(file.size / CHUNK_SIZE);\n                let currentChunk = 0;\n\n                const reader = new FileReader();\n\n                reader.onload = function (e) {\n                    const fileBuffer = e.target.result;\n                    try{\n\n                        ws.send(JSON.stringify({\n                            flag: \"Upload\",\n                            filename: file.name,\n                            chunk: currentChunk,\n                            totalChunks: totalChunks,\n                            filebuffer: btoa(new Uint8Array(fileBuffer).reduce((data, byte) => data + String.fromCharCode(byte), ''))\n                        }));\n                    }\n                    catch(e)\n                    {\n                        console.error(e)\n                    }\n\n                    currentChunk++;\n                    if (currentChunk < totalChunks) {\n                        sendNextChunk();  // 傳送下一個塊\n                    } else {\n                        console.log(`${file.name} 上傳完成`);\n                    }\n                };\n\n                function sendNextChunk() {\n                    const start = currentChunk * CHUNK_SIZE;\n                    const end = Math.min(start + CHUNK_SIZE, file.size);\n                    const chunk = file.slice(start, end);\n                    reader.readAsArrayBuffer(chunk);  // 讀取每個塊為 ArrayBuffer\n                }\n\n                sendNextChunk();  // 開始傳送第一個塊\n            }\n        } else {\n            alert(\"沒有選擇檔案\");\n        }\n    };\n\n    return (\n        <div style={{\n            width: '80%',\n            margin: 'auto'\n        }}>\n            <div className=\"mb-3\">\n                <h1 for=\"formFileMultiple\" className=\"form-label\">選擇影片</h1>\n                <input className=\"form-control\" type=\"file\" id=\"formFileMultiple\" multiple onChange={(e) => handleFileChange(e)} />\n                <button style={{ margin: '30px', color: 'white', backgroundColor: 'rgba(73,107,191,1.0)', }} type=\"button\" className=\"btn btn-light\" onClick={() => handleUpload()}>上傳</button>\n            </div>\n            <div>\n                {/* <h2 for=\"formFileMultiple\" className=\"form-label\">已選擇資料</h2>\n            <ul style={{listStyle:\"none\"}}>\n                \n                {reactChildren}\n            </ul> */}\n            </div>\n        </div>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}